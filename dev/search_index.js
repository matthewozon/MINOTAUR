var documenterSearchIndex = {"docs":
[{"location":"#MINOTAUR.jl","page":"Home","title":"MINOTAUR.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for MINOTAUR.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"MINOTAUR.MINOTAUR\nMINOTAUR.logistic\nMINOTAUR.f_logistic\nMINOTAUR.g_sqrtquad\nMINOTAUR.g_sqrtquad_inv_pos\nMINOTAUR.g_sqrtquad_inv_neg\nMINOTAUR.interval\nMINOTAUR.quadrature_fg\nMINOTAUR.τ_root_sphere\nMINOTAUR.quadrature_fg_sphere\nMINOTAUR.quadrature_fg_sphere_g_opt_f\nMINOTAUR.τ_root_cylinder\nMINOTAUR.quadrature_fg_cylinder\nMINOTAUR.quadrature_fg_cylinder_g_opt_f","category":"page"},{"location":"#MINOTAUR.MINOTAUR","page":"Home","title":"MINOTAUR.MINOTAUR","text":"This is the MINOTAUR, it contains \n\nMINOTAUR.MINOTAUR\nMINOTAUR.logistic\nMINOTAUR.f_logistic\nMINOTAUR.g_sqrtquad\nMINOTAUR.g_sqrtquad_inv_pos\nMINOTAUR.g_sqrtquad_inv_neg\nMINOTAUR.interval\nMINOTAUR.quadrature_fg\nMINOTAUR.τ_root_sphere\nMINOTAUR.quadrature_fg_sphere\nMINOTAUR.quadrature_fg_sphere_g_opt_f\nMINOTAUR.τ_root_cylinder\nMINOTAUR.quadrature_fg_cylinder\nMINOTAUR.quadrature_fg_cylinder_g_opt_f\n\nAttempt to optimize the discretization for the quadrature to compute the integral\n\n    ∫_τ1^τ2 f(g(τ)) dτ\n\nassuming that g is a bijection, and that g^{-1} assumes non-infinite values\n\nWe choose to discretize τ so that enough details of f are represented\n\nWe choose a subdivision r_i that captures the details of f over the interval [min(g(τ1),g(τ2)),max(g(τ1),g(τ2))]\n\n\n\n\n\n","category":"module"},{"location":"#MINOTAUR.logistic","page":"Home","title":"MINOTAUR.logistic","text":"logistic(x::Cdouble,thX::Cdouble=33.275)\n\nreturns the value of the logistic function at x, 0 if x<-thX, 1 if x>thX\n    1/(1+e^{-x})\n\nlogistic(x::Cdouble,a::Cdouble,b::Cdouble,α::Cdouble=1.0,thX::Cdouble=33.275)\n\nreturns the value of the logistic function at x, 0 if αx<-thX, 1 if αx>thX\n    a + (b-a)/(1+(1/α)*e^{-αx})\n\n\n\n\n\n","category":"function"},{"location":"#MINOTAUR.f_logistic","page":"Home","title":"MINOTAUR.f_logistic","text":"function used for tests of the integral of composition of functions\n\n    f_logistic(r::Array{Cdouble,1},r0::Cdouble,Δr::Cdouble;A::Cdouble=1.0)\n\ninput:\n\n  - r: radial distance\n  - r0: critical distance \n  - Δr: transition distance\n  - A: amplitude (default at 1)\n\noutput: \n\n  - A/(1.0+exp((r-r0)/Δr))\n\n\n\n\n\n","category":"function"},{"location":"#MINOTAUR.g_sqrtquad","page":"Home","title":"MINOTAUR.g_sqrtquad","text":"g_sqrtquad(τ::Cdouble,a::Cdouble,b::Cdouble,c::Cdouble)\n\ninner function of the composition in the integral ∫_τ1^τ2 f(g(τ)) dτ\n\nInspired by the distance from a central point to a point on a parametric line \n\ncomputes √(a*τ^2+b*τ+c) and should be called with a>0, and b^2<4ac so that a*τ^2+b*τ+c⩾0\n\n\n\n\n\n","category":"function"},{"location":"#MINOTAUR.g_sqrtquad_inv_pos","page":"Home","title":"MINOTAUR.g_sqrtquad_inv_pos","text":"g_sqrtquad_inv_pos(r::Cdouble,a::Cdouble,b::Cdouble,c::Cdouble)\n\nincreasing inverse of sqrt(a*τ^2+b*τ+c), i.e. τ⩾-b/(2a)\n\nshould be called with a>0 and b^2<4ac\n\nreturns √((r^2 + (b^2/(4a)) - c)/a) - b/(2a)\n\n\n\n\n\n","category":"function"},{"location":"#MINOTAUR.g_sqrtquad_inv_neg","page":"Home","title":"MINOTAUR.g_sqrtquad_inv_neg","text":"g_sqrtquad_inv_neg(r::Cdouble,a::Cdouble,b::Cdouble,c::Cdouble)\n\ndecreasing inverse of sqrt(a*τ^2+b*τ+c), i.e. τ<-b/(2a)\n\nshould be called with a>0 and b^2<4ac\n\nreturns -√((r^2 + (b^2/(4a)) - c)/a) - b/(2a)\n\n\n\n\n\n","category":"function"},{"location":"#MINOTAUR.interval","page":"Home","title":"MINOTAUR.interval","text":"interval(τ_min_0::Cdouble,τ_max_0::Cdouble,a::Cdouble,b::Cdouble,c::Cdouble)\n\nLet τ_min=min(τ_min_0,τ_max_0) ⩽ τ_max=max(τ_min_0,τ_max_0)\n\nThis function determines the interval boundaries corresponding to g([τ_min,τ_max]) with g(τ) = √(a*τ^2+b*τ+c) (where a>0 and b^2<4ac so that a*τ^2+b*τ+c⩾0)\n\nThe determination of the boundaries depends on the values τ_min and τ_max relative to τ0 = -b/(2a) (corrseponding to the argmin of g)\n\nif τ_min and τ_max ⩾ τ0\n    g is increasing, so rmin = g(τ_min), and rmax = g(τ_max). rmid = Inf to indicate the lack of intermediate point\nif τ_min and τ_max ⩽ τ0\n    g is decreasing, so rmin = g(τ_max), and rmax = g(τ_min). rmid = Inf to indicate the lack of intermediate point\nif τ_min⩽τ0⩽τ_max\n    g is decreasing over [τ_min,τ0], and increasing over [τ0,τ_max], rmid = g(τ0), rmin = g(τ_min), and rmax = g(τ_max)\n\n\n\n\n\n","category":"function"},{"location":"#MINOTAUR.quadrature_fg","page":"Home","title":"MINOTAUR.quadrature_fg","text":"quadrature_fg(f::Function,τ_min::Cdouble,τ_max::Cdouble,a::Cdouble,b::Cdouble,c::Cdouble,Δr0::Cdouble;Nr_min::Int64=20)\n\ncomputes the trapezoid quadrature for the integral\n\n    ∫_{τ_min}^{τ_max} f(g(τ)) dτ\n\nwith τ_min<τ_max, and g(τ) = √(a*τ^2+b*τ+c) (where a>0 and b^2<4ac so that a*τ^2+b*τ+c⩾0)\n\nThe minumim resolution for the variable r for f is Δr0, and the discretization of r should have at least Nr_min nodes.\n\n\n\n\n\nquadrature_fg(fgs::Array{Cdouble,1},τs::Array{Cdouble,1})\n\ncomputes the quadrature ∑_n f(g(τ_n)) ∫ e_n(τ) dτ ≃ ∫_{τ_min}^{τ_max} f(g(τ)) dτ\n\nwith fgs[n] = f(g(τs[n])) and e_n piecewise linear basis functions\n\n\n\n\n\n","category":"function"},{"location":"#MINOTAUR.τ_root_sphere","page":"Home","title":"MINOTAUR.τ_root_sphere","text":"determines the distance on the parametric line starting from (xm,ym,zm) in the direction (x0,y0,z0)\n\nτ_root_sphere(x0::Cdouble,y0::Cdouble,z0::Cdouble,xm::Cdouble,ym::Cdouble,zm::Cdouble,R2::Cdouble,rm2::Cdouble)\n\ninput: \n\n  - xm, ym and zm: origin of the parametric line (τ=0)\n  - x0, y0 and z0: coordinates of a point on the parametric line\n  - R2: square radius of the intersecting sphere \n  - rm2: square distance between the center of the sphere and (xm,ym,zm), rm^2=xm^2+ym^2+zm^2  (R2-rm2⩾0)\n\noutput: \n\n  - return the distance between the (xm,ym,zm) and the intersection point (sphere of radius R and straight line between (xm,ym,zm) and (x0,y0,z0))\n\n\n\n\n\n","category":"function"},{"location":"#MINOTAUR.quadrature_fg_sphere","page":"Home","title":"MINOTAUR.quadrature_fg_sphere","text":"quadrature evaluating the integral ∫_{τmin}^{τmax} f(g(τ)) dτ for a sphere of radius μ0\n\nwith g(τ)=√(a*τ^2+b*τ+c) with a, b and c defined for each position in the sphere (depend on the location in the sphere and the direction of the parametric line)\n\nf(r) is a mass function depending depending on the distance from the center of the sphere \n\nthe integral boundaries are such that the parametric curve satifies τmin->(r[n],φ[j],θ[k]) and in τmax->(r(τmax),φ(τmax),θ(τmax)) with r(τmax)=μ0+κΔr \nτmin is set to 0 without loss of generality and τmax is determined for each position in the sphere \n\nquadrature_fg_sphere(r::Array{Cdouble,1},φ::Array{Cdouble,1},θ::Array{Cdouble,1},x0::Cdouble,y0::Cdouble,z0::Cdouble,μ0::Cdouble,Δr::Cdouble;κ::Cdouble=5.0,Nτ::Int64=20)\n\ninput:\n\n  - r,φ,θ: spherical coordinates of the discretization of the sphere (polar axis Oz)\n  - x0,y0,z0: cartesian coordinate of a point belonging to the parametric straight line of integration\n  - μ0: radius of the sphere \n  - Δr: transition distance of the mass function f\n\noptional input:\n\n  - κ:  maximum radius for the integration is r=μ0+κΔr\n  - Nτ: number of discretization nodes \n\noutput:\n\n  - FGQ_rφθ: 3D array containing the quadrature for each discretization nodes (r,φ,θ)\n\n\n\n\n\n","category":"function"},{"location":"#MINOTAUR.quadrature_fg_sphere_g_opt_f","page":"Home","title":"MINOTAUR.quadrature_fg_sphere_g_opt_f","text":"quadrature_fg_sphere_g_opt_f(r::Array{Cdouble,1},θ::Array{Cdouble,1},y::Array{Cdouble,1},x0::Cdouble,y0::Cdouble,z0::Cdouble,μ0::Cdouble,Δr::Cdouble;κ::Cdouble=5.0,Nτ::Int64=20)\n\nquadrature evaluating the integral ∫_{τmin}^{τmax} f(g(τ)) dτ for a sphere of radius μ0 \n\nContrary to quadrature_fg_sphere the quadrature is adjusted to f instead of g\n\nsee quadrature_fg_sphere and quadrature_fg(f::Function,τ_min::Cdouble,τ_max::Cdouble,a::Cdouble,b::Cdouble,c::Cdouble,Δr0::Cdouble;Nr_min::Int64=20)\n\n\n\n\n\n","category":"function"},{"location":"#MINOTAUR.τ_root_cylinder","page":"Home","title":"MINOTAUR.τ_root_cylinder","text":"determines the distance on the parametric line starting from (xm,ym,zm) in the direction (x0,y0,z0) intersecting with the cylinder centered on the Oy axis and of radius R\n\nτ_root_cylinder(x0::Cdouble,y0::Cdouble,z0::Cdouble,xm::Cdouble,ym::Cdouble,zm::Cdouble,R2::Cdouble,rm2::Cdouble)\n\ninput: \n\n  - xm, ym and zm: origin of the parametric line (τ=0)\n  - x0, y0 and z0: coordinates of a point on the parametric line\n  - R2: square radius of the intersecting cylinder \n  - rm2: square distance between the center of the cylinder and (xm,ym,zm), rm^2=xm^2+ym^2  (R2-rm2⩾0)\n\noutput: \n\n  - return the distance between the (xm,ym,zm) and the intersection point (cylinder of radius R along the Oy axis and straight line between (xm,ym,zm) and (x0,y0,z0))\n\n\n\n\n\n","category":"function"},{"location":"#MINOTAUR.quadrature_fg_cylinder","page":"Home","title":"MINOTAUR.quadrature_fg_cylinder","text":"quadrature evaluating the integral ∫_{τmin}^{τmax} f(g(τ)) dτ for a cylinder of radius μ0 (along the axis Oy)\n\n\nwith g(τ)=√(a*τ^2+b*τ+c) with a, b and c defined for each position in the cylinder (depend on the location in the cylinder and the direction of the parametric line)\n\nf(r) is a mass function depending depending on the distance from the center of the cylinder \n\nthe integral boundaries are such that the parametric curve satifies τmin->(r[n],θ[j],y[k]) and in τmax->(r(τmax),θ(τmax),y(τmax)) with r(τmax)=μ0+κΔr \nτmin is set to 0 without loss of generality and τmax is determined for each position in the cylinder \n\n\nquadrature_fg_cylinder(r::Array{Cdouble,1},θ::Array{Cdouble,1},y::Array{Cdouble,1},x0::Cdouble,y0::Cdouble,z0::Cdouble,μ0::Cdouble,Δr::Cdouble;κ::Cdouble=5.0,Nτ::Int64=20)\n\ninput:\n\n  - r,θ,y: cylindrical coordinates of the discretization of the cylinder (symmetry axis Oy)\n  - x0,y0,z0: cartesian coordinate of a point belonging to the parametric straight line of integration\n  - μ0: radius of the cylinder\n  - Δr: transition distance of the mass function f\n\noptional input:\n\n  - κ:  maximum radius for the integration is r=μ0+κΔr\n  - Nτ: number of discretization nodes \n\noutput:\n\n  - FGQ_rθy: 3D array containing the quadrature for each discretization nodes (r,θ,y)\n\n\n\n\n\n","category":"function"},{"location":"#MINOTAUR.quadrature_fg_cylinder_g_opt_f","page":"Home","title":"MINOTAUR.quadrature_fg_cylinder_g_opt_f","text":"quadrature_fg_cylinder_g_opt_f(r::Array{Cdouble,1},θ::Array{Cdouble,1},y::Array{Cdouble,1},x0::Cdouble,y0::Cdouble,z0::Cdouble,μ0::Cdouble,Δr::Cdouble;κ::Cdouble=5.0,Nτ::Int64=20)\n\nquadrature evaluating the integral ∫_{τmin}^{τmax} f(g(τ)) dτ for a cylinder of radius μ0 (along the axis Oy)\n\nContrary to quadrature_fg_cylinder the quadrature is adjusted to f instead of g\n\nsee quadrature_fg_cylinder and quadrature_fg(f::Function,τ_min::Cdouble,τ_max::Cdouble,a::Cdouble,b::Cdouble,c::Cdouble,Δr0::Cdouble;Nr_min::Int64=20)\n\n\n\n\n\n","category":"function"}]
}
